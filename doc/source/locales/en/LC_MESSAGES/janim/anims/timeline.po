# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, jkjkil4
# This file is distributed under the same license as the JAnim package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: JAnim\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-03-14 15:44+0800\n"
"PO-Revision-Date: 2024-03-14 15:46+0800\n"
"Last-Translator: \n"
"Language-Team: en <LL@li.org>\n"
"Language: en\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Generated-By: Babel 2.14.0\n"
"X-Generator: Poedit 3.4.2\n"

#: ../../source/janim/anims/timeline.rst:2
msgid "timeline"
msgstr "timeline"

#: janim.anims.timeline.Timeline:1 janim.anims.timeline.Timeline.CtxBlocker:1
#: janim.anims.timeline.Timeline.ScheduledTask:1
#: janim.anims.timeline.Timeline.TimeOfCode:1
#: janim.anims.timeline.Timeline.TimedItemData:1 of
msgid "基类：:py:class:`object`"
msgstr "基类：:py:class:`object`"

#: janim.anims.timeline.Timeline:1 of
msgid "继承该类并实现 :meth:`construct` 方法，以实现动画的构建逻辑"
msgstr ""
"Inherit this class and implement the :meth:`construct` method to implement the "
"logic of building animations"

#: janim.anims.timeline.Timeline:3 of
msgid "调用 :meth:`build` 可以得到构建完成的动画对象"
msgstr "Call :meth:`build` to get the constructed animation object"

#: janim.anims.timeline.Timeline.get_context:1 of
msgid "调用该方法可以得到当前正在构建的 :class:`Timeline` 对象"
msgstr ""
"Call this method to get the current :class:`Timeline` object being constructing"

#: janim.anims.timeline.Timeline.get_context:3 of
msgid ""
"如果在 :meth:`construct` 方法外调用，且 ``raise_exc=True`` （默认），则抛出 "
"``LookupError``"
msgstr ""
"If called outside of :meth:`construct` and ``raise_exc=True`` (default), raises "
"a ``LookupError``"

#: janim.anims.timeline.Timeline.CtxBlocker:1 of
msgid ""
"使得在 ``with Timeline.CtxBlocker():`` 内，物件不会自动调用 :meth:`register`"
msgstr ""
"Prevents items from automatically calling :meth:`register` within ``with "
"Timeline.CtxBlocker():``."

#: janim.anims.timeline.Timeline.CtxBlocker:3 of
msgid "用于临时创建物件时"
msgstr "Used for temporarily creating items."

#: janim.anims.timeline.Timeline.TimeOfCode:1 of
msgid "标记 :meth:`~.Timeline.construct` 执行到的代码行数所对应的时间"
msgstr ""
"Marks the time corresponding to the line number of code execution in :meth:`~."
"Timeline.construct`"

#: janim.anims.timeline.Timeline.ScheduledTask:1 of
msgid "另见 :meth:`~.Timeline.schedule`"
msgstr "See :meth:`~.Timeline.schedule`"

#: janim.anims.timeline.Timeline.TimedItemData:1 of
msgid "表示从 ``time`` 之后，物件的数据"
msgstr "Represents the data of an item after ``time``"

#: ../../docstring janim.anims.timeline.Timeline.TimedItemData.data:1 of
msgid "当 ``data`` 的类型为 ``Item.Data`` 时，为静态数据"
msgstr "When the type of ``data`` is ``Item.Data``, it represents static data."

#: ../../docstring janim.anims.timeline.Timeline.TimedItemData.data:2 of
msgid "否则，对于 ``DynamicData`` ，会在获取时调用以得到对应数据"
msgstr ""
"Otherwise, for ``DynamicData``, it will be called to obtain the corresponding "
"data when accessed."

#: janim.anims.timeline.Timeline.construct:1 of
msgid "继承该方法以实现动画的构建逻辑"
msgstr "Implement this method to build the animation logic"

#: janim.anims.timeline.SourceTimeline.build:1
#: janim.anims.timeline.Timeline.build:1 of
msgid "构建动画并返回"
msgstr "Build the animation and return it"

#: janim.anims.timeline.Timeline.schedule:1 of
msgid "计划执行"
msgstr "Schedule execution"

#: janim.anims.timeline.Timeline.schedule:3 of
msgid ""
"会在进度达到 ``at`` 时，对 ``func`` 进行调用， 可传入 ``*args`` 和 ``**kwargs``"
msgstr ""
"Calls ``func`` when the progress reaches ``at``, can pass ``*args`` and "
"``**kwargs``"

#: janim.anims.timeline.Timeline.forward:1 of
msgid "向前推进 ``dt`` 秒"
msgstr "Advance by ``dt`` seconds"

#: janim.anims.timeline.Timeline.forward_to:1 of
msgid "向前推进到 ``t`` 秒的时候"
msgstr "Advance to time ``t``"

#: janim.anims.timeline.Timeline.prepare:1 of
msgid "应用动画"
msgstr "Apply animations"

#: janim.anims.timeline.Timeline.play:1 of
msgid "应用动画并推进到动画结束的时候"
msgstr "Apply animations and advance to the end of the animation"

#: janim.anims.timeline.Timeline.show:1 of
msgid "显示物件"
msgstr "Show item"

#: janim.anims.timeline.Timeline.hide:1 of
msgid "隐藏物件"
msgstr "Hide item"

#: janim.anims.timeline.Timeline.cleanup_display:1 of
msgid "对目前显示中的所有物件调用隐藏，使得正确产生 :class:`~.Display` 对象"
msgstr ""
"Hide all currently displayed items to correctly generate :class:`~.Display` "
"objects"

#: janim.anims.timeline.Timeline.register:1 of
msgid "在 :meth:`construct` 中创建的物件会自动调用该方法"
msgstr "Automatically called for items created in :meth:`construct`"

#: janim.anims.timeline.Timeline.register_dynamic_data:1 of
msgid "注册动态数据信息"
msgstr "Registers dynamic data information."

#: janim.anims.timeline.Timeline.register_dynamic_data:3 of
msgid ""
"表示在调用 :meth:`get_stored_data_at_time` 时，如果其时间在 ``as_time`` 和下一个"
"数据的时间之间， 就调用 ``data`` 来产生动态的数据"
msgstr ""
"When :meth:`get_stored_data_at_time` is called, if its time is between "
"``as_time`` and the time of the next data, ``data`` will be called to generate "
"dynamic data."

#: janim.anims.timeline.Timeline.register_dynamic_data:6 of
msgid "例如，在 :class:`~.MethodTransform` 中使用到"
msgstr "For example, used in :class:`~.MethodTransform`."

#: janim.anims.timeline.Timeline.detect_changes_of_all:1 of
msgid "检查所有物件是否有产生变化并记录"
msgstr "Check all items if have changed and record the changes"

#: janim.anims.timeline.Timeline.detect_changes:1 of
msgid "检查指定的列表中的物件是否有产生变化并记录（仅检查自身而不包括子物件的）"
msgstr ""
"Check items in the specified list if have changed and record the changes (only "
"checks itself, without descendants)"

#: janim.anims.timeline.Timeline.get_stored_data_at_time:1 of
msgid "得到在指定时间物件的数据"
msgstr "Get the data of the item at the specified time."

#: janim.anims.timeline.Timeline.get_stored_data_at_time:3 of
msgid ""
"在两份数据的分界处请使用 :meth:`get_stored_data_at_right` 和 :meth:"
"`get_stored_at_left` 来明确"
msgstr ""
"Use :meth:`get_stored_data_at_right` and :meth:`get_stored_at_left` to "
"explicitly handle the boundary between two sets of data."

#: janim.anims.timeline.Timeline.get_stored_data_at_right:1 of
msgid "得到在指定时间之后的瞬间，物件的数据"
msgstr "Get the data of the item at the instant after the specified time"

#: janim.anims.timeline.Timeline.get_stored_data_at_left:1 of
msgid "得到在指定时间之前的瞬间，物件的数据"
msgstr "Get the data of the item at the instant before the specified time"

#: janim.anims.timeline.Timeline.t2d:1 of
msgid "``t2d`` 是 \"time to data\" 的简写"
msgstr "Abbreviation for \"time to data\"."

#: janim.anims.timeline.Timeline.t2d:3 of
msgid ""
"如果 ``t`` 为 ``None``，则自动设为 :py:obj:`~.UpdaterParams.global_t` 即当前动画"
"运行到的时间， 用于在 :class:`~.DataUpdater` 和 :class:`~.ItemUpdater` 中简化调用"
msgstr ""
"If ``t`` is ``None``, it is automatically set to :class:`~.UpdaterParams."
"global_t`, which is the current time the animation has reached, used to simplify "
"calls in :class:`~.DataUpdater` and :class:`~.ItemUpdater`."

#: janim.anims.timeline.Timeline.t2d:5 of
msgid "等效于调用 :meth:`get_stored_data_at_right`"
msgstr "Equivalent to calling :meth:`get_stored_data_at_right`."

#: janim.anims.timeline.Timeline.get_construct_lineno:1 of
msgid "得到当前在 :meth:`construct` 中执行到的行数"
msgstr "Get the current line number being executed in :meth:`construct`"

#: janim.anims.timeline.Timeline.get_lineno_at_time:1 of
msgid "根据 ``time`` 得到对应执行到的行数"
msgstr "Get the corresponding line number based on ``time``."

#: janim.anims.timeline.SourceTimeline:1 of
msgid "基类：:py:class:`~janim.anims.timeline.Timeline`"
msgstr "基类：:py:class:`~janim.anims.timeline.Timeline`"

#: janim.anims.timeline.SourceTimeline:1 of
msgid "与 :class:`Timeline` 相比，会在背景显示源代码"
msgstr ""
"Compared to :class:`Timeline`, this will display the source code in the "
"background."

#: janim.anims.timeline.TimelineAnim:1 of
msgid "基类：:py:class:`~janim.anims.composition.AnimGroup`"
msgstr "基类：:py:class:`~janim.anims.composition.AnimGroup`"

#: janim.anims.timeline.TimelineAnim:1 of
msgid "运行 :meth:`Timeline.run` 后返回的动画组"
msgstr "Animation group returned after running :meth:`Timeline.run`."

#: janim.anims.timeline.TimelineAnim:3 of
msgid ""
"``self.display_anim`` 是由 :meth:`Timeline.construct` 中执行 :meth:`Timeline."
"show` 和 :meth:`Timeline.hide` 而产生的"
msgstr ""
"``self.display_anim`` is generated by executing :meth:`Timeline.show` and :meth:"
"`Timeline.hide` in :meth:`Timeline.construct`."

#: janim.anims.timeline.TimelineAnim:5 of
msgid ""
"``self.user_anim`` 是显式使用了 :meth:`Timeline.prepare` 或 :meth:`Timeline."
"play` 而产生的"
msgstr ""
"``self.user_anim`` is generated explicitly using :meth:`Timeline.prepare` or :"
"meth:`Timeline.play`."

#: janim.anims.timeline.TimelineAnim.anim_on:1 of
msgid "将 ``local_t`` 换算为 ``alpha`` 并调用 :meth:`anim_on_alpha`"
msgstr "Converts ``local_t`` to ``alpha`` and calls :meth:`anim_on_alpha`"

#: janim.anims.timeline.TimelineAnim.render_all:1 of
msgid "调用所有的 :class:`RenderCall` 进行渲染"
msgstr "Calls all :class:`RenderCall` objects for rendering."

#~ msgid "用于 :class:`~.Animation` 的初始化以及物件的操作"
#~ msgstr "Used for initialization of :class:`~.Animation` and operations on items"
